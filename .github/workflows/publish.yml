on:
  push:
    branches:
      - master

jobs:
  # Publish jtd_fuzz
  publish_crate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  # Create a release for jtd-fuzz
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - id: get_release_version
        run: echo ::set-output name=version::$(cargo pkgid --package jtd-fuzz | cut -d '#' -f 2)
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: ${{ steps.get_release_version.outputs.version }}

  # Across a matrix of supported targets, build and upload binaries for jtd-fuzz
  release_binary:
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - x86_64-pc-windows-gnu
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
        include:
          - target: x86_64-pc-windows-gnu
            extension: .exe
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo install cross
      - run: cross build --project jtd-fuzz --release --target=$TARGET
        env:
          TARGET: ${{ matrix.target }}
      - run: |
          zip --junk-paths $TARGET.zip \
            jtd_fuzz_bin/target/$TARGET/release/jtd-fuzz$EXTENSION
        env:
          TARGET: ${{ matrix.target }}
          EXTENSION: ${{ matrix.extension }}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: jtd_fuzz_bin/${{ matrix.target }}${{ matrix.extension }}.zip
          asset_name: ${{ matrix.target }}.zip
          asset_content_type: application/zip
